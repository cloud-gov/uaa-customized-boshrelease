#!/bin/bash
set -e

wait_down() {
  for _ in {1..120}; do
    echo 'checking if uaa is down'
    if ! curl -sfk https://localhost:8443; then
      echo 'uaa is down'
      return 0
    fi
    echo 'uaa is up...sleeping'
    sleep 5
  done
  echo 'timed out waiting for uaa to be down'
  return 1
}

wait_up() {
  for _ in {1..120}; do
    echo 'checking if uaa is up'
    if curl -sfk https://localhost:8443; then
      echo 'uaa is up'
      return 0
    fi
    echo 'uaa is not up...sleeping'
    sleep 5
  done
  echo 'timed out waiting for uaa to be up'
  return 1
}

##########. WARNING. #################
## This is a hack. plain and simple.
## Do not try this at home.
######################################

wait_up

PACKAGES_DIR=/var/vcap/packages
JOB_DIR=/var/vcap/jobs/uaa-customized

# Wait until UAA pre-start has finished copying files from packages to avoid
# race condition between pre-start scripts
until [ -d /var/vcap/data/uaa/ ]; do
  sleep 1
done
sleep 5

WARFILE="${PACKAGES_DIR}/uaa/tomcat/webapps/ROOT.war"
JARFILE=$(unzip -v "${WARFILE}" | grep cloudfoundry-identity-server- | awk '{print $8}')
WAR_TEMPDIR="$(mktemp -d)"

pushd "${WAR_TEMPDIR}"
  unzip "${WARFILE}" "${JARFILE}"

  # ignore templates for now
  # mkdir -p templates/web
  # cp -a "${JOB_DIR}"/web/* templates/web
  # zip -r "${JARFILE}" templates/web
  # zip "$WARFILE" "$JARFILE"

  mkdir -p resources
  cp -a "${JOB_DIR}"/resources/* resources/
  zip -r "${WARFILE}" resources
popd

rm -rf "${WAR_TEMPDIR}"

# Recopy artifacts from /var/vcap/packages/uaa to /var/vcap/data/uaa
/var/vcap/jobs/uaa/bin/pre-start

# Restart uaa to apply template overrides
/var/vcap/bosh/bin/monit restart uaa

wait_down
wait_up

echo 'up' > /var/vcap/jobs/uaa-customized/status
